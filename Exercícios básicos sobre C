// Exercício 1 - Faça um programa que leia um número inteiro e o imprima.
int main()
{
    int num;
    
    printf("Digite um numero \n");
    scanf("%d", &num);
    
    printf("o numero digitado foi %d", num);

    return 0;
}

//Exercício 2 - Peça ao usuário para digitar três valores inteiros e imprima a soma deles.
int main()
{
    int num1;
    int num2;
    int num3;
    int soma;
    
    printf("Digite o 1° numero \n");
    scanf("%d", &num1);
    
    printf("Digite o 2° numero \n");
    scanf("%d", &num2);
    
    printf("Digite o 3° numero \n");
    scanf("%d", &num3);
    
    soma = num1 + num2+ num3;
    
    printf("A soma do numero digitados foi %d", soma);

    return 0;
}

//Exercício 3 - Leia um número real e imprima o resultado do quadrado desse número
int main()
{
    int num;
    
    printf("Digite o numero que queria fazer ao quadrado \n");
    scanf("%d", &num);
    
    printf("o quadrado do nuemro é %d", num * num);

    return 0;
}

//Exercício 4 - Leia um número real e imprima a quinta parte deste número.
int main()
{
    int num;
    
    printf("Digite o numero que queria fazer a quinta parte \n");
    scanf("%d", &num);
    
    printf("a quinta aparte do nuemro é %d", num / 5);

    return 0;
}

//Exercício5. Leia um número inteiro e imprima o seu antecessor e o seu sucessor.
int main()
{
    int num;
    
    printf("Digite um numero parar saber o antecessor e o sucessor   \n");
    scanf("%d", &num);
    
    printf("O antecessor é  %d \nO numero é %d \nO sucessor é %d", num - 1, num, num + 1);

    return 0;
}

//Exercício6. Faça um programa que receba dois números e mostre qual deles é o maior.
int main()
{
    int num1;
    int num2;
    
    printf("digite o primeiro numero \n");
    scanf("%d", &num1);
    
    printf("digite o segundo numero \n");
    scanf("%d", &num2);
    
    if(num1 > num2)
    {
       printf("O %d é maior que o %d", num1, num2); 
    }
    else
    {
        printf("O %d é maior que o %d", num2, num1);
    }

    return 0;
}

//Exercício7. Faça um programa que receba um número inteiro e verifique se este número e par ou ímpar.
int main()
{
    int num;
   
    printf("digite o numero parar saber se é par ou ímpar \n");
    scanf("%d", &num);
    
    if(num % 2 == 0)
    {
       printf("O %d é par", num); 
    }
    else
    {
        printf("O %d é ímpar", num);
    }

    return 0;
}

/*Exercício8. Escreva um programa que, dados dois números inteiros, mostre na tela o maior deles, assim
*como a diferença existente entre ambos.
*/
int main()
{
    int num1;
    int num2;
   
    printf("digite o primeiro numero \n");
    scanf("%d", &num1);
    
    printf("digite o segundo numero \n");
    scanf("%d", &num2);
    
    if(num1 > num2)
    {
       printf("O %d é maior e a diferença é %d", num1, num1 - num2); 
    }
    else if(num2 > num1)
    {
       printf("O %d é maior e a diferença é %d", num2, num2 - num1);
    }
    else
    {
        printf("Os numeros são iguais");
    }

    return 0;
}

/*Exercício9. Escreva o menu de opções abaixo. Leia a opção do usuário e execute a operação escolhida.
*Escreva uma mensagem de erro se a opção for inválida.
*Escolha a opção:
*1- Soma de 2 números.
*2- Diferença entre 2 números (maior pelo menor).
*3- Produto entre 2 números.
*4- Divisão entre 2 números (o denominador não pode ser zero).
*Opção:
*/


/*Exercício10. Leia a idade e o tempo de serviço de um trabalhador e escreva se ele pode ou não se
*aposentar. As condições para aposentadoria são:
*• Ter pelo menos 65 anos,
*• Ou ter trabalhado pelo menos 30 anos,
*• Ou ter pelo menos 60 anos e trabalhado pelo menos 25 anos.
*/


/*Exercício11. Faça um programa que determine o mostre os cinco primeiros múltiplos de 3, considerando
*números maiores que 0.
*Disciplina: Estrutura de Dados I
*Professor: Cássio Capucho Peçanha
*/


/*Exercício12. Escreva um programa que escreva na tela, de 1 até 100, de 1 em 1, 3 vezes. A primeira vez
*deve usar a estrutura de repetição for, a segunda while, e a terceira do while.
*/

/*Exercício13. Faça um algoritmo utilizando o comando while que mostra uma contagem regressiva na tela,
*iniciando em 10 e terminando em 0. Mostrar uma mensagem "FIM!” após a contagem.
*/


/*Exercício14. Faça um programa que leia um número inteiro positivo par N e imprima todos os números
*Exercíciopares de 0 até N em ordem decrescente.
*/


/*Exercício15. Elabore um programa que faça leitura de vários números inteiros, até que se digite um
*número negativo. O programa tem que retornar o maior e o menor número lido.
*/


/*Exercício16. Faça um programa que possua um vetor denominado A que armazene 6 números inteiros. O
*programa deve executar os seguintes passos:
*• Atribua os seguintes valores a esse vetor: 1, 0, 5, -2, -5, 7.
*• Armazene em uma variável inteira (simples) a soma entre os valores das posições A[0], A[1] e
*A[5] do vetor e mostre na tela esta soma.
*• Modifique o vetor na posição 4, atribuindo a esta posição o valor 100.
*• Mostre na tela cada valor do vetor A, um em cada linha.
*/


//Exercício17.Crie um programa que lê 6 valores inteiros e, em seguida, mostre na tela os valores lidos.


//Exercício18. Leia um vetor de 10 posições, depois contar e escrever quantos valores pares ele possui.


/*Exercício19. Faça um programa que leia dois vetores de 10 elementos. Crie um vetor que seja a
*intersecção entre os 2 vetores anteriores, ou seja, que contém apenas os números que estão
*em ambos os vetores. Não deve conter números repetidos.
*/


/*Exercício20. Escreva um programa que leia um número inteiro positivo n e em seguida imprima n linhas do
*chamado Triangulo de Pascal:
*1
*1 1
*1 2 1
*1 3 3 1
*1 4 6 4 1
*1 5 10 10 5 1
*...
*/

