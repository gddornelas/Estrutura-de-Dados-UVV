// Exercício 1 - Faça um programa que leia um número inteiro e o imprima.

int main()
{
    int num;
    
    printf("Digite um numero \n");
    scanf("%d", &num);
    
    printf("o numero digitado foi %d", num);

    return 0;
}

//Exercício 2 - Peça ao usuário para digitar três valores inteiros e imprima a soma deles.

int main()
{
    int num1;
    int num2;
    int num3;
    int soma;
    
    printf("Digite o 1° numero \n");
    scanf("%d", &num1);
    
    printf("Digite o 2° numero \n");
    scanf("%d", &num2);
    
    printf("Digite o 3° numero \n");
    scanf("%d", &num3);
    
    soma = num1 + num2+ num3;
    
    printf("A soma do numero digitados foi %d", soma);

    return 0;
}

//Exercício 3 - Leia um número real e imprima o resultado do quadrado desse número

int main()
{
    int num;
    
    printf("Digite o numero que queria fazer ao quadrado \n");
    scanf("%d", &num);
    
    printf("o quadrado do nuemro é %d", num * num);

    return 0;
}

//Exercício 4 - Leia um número real e imprima a quinta parte deste número.

int main()
{
    int num;
    
    printf("Digite o numero que queria fazer a quinta parte \n");
    scanf("%d", &num);
    
    printf("a quinta aparte do nuemro é %d", num / 5);

    return 0;
}

//Exercício5. Leia um número inteiro e imprima o seu antecessor e o seu sucessor.

int main()
{
    int num;
    
    printf("Digite um numero parar saber o antecessor e o sucessor   \n");
    scanf("%d", &num);
    
    printf("O antecessor é  %d \nO numero é %d \nO sucessor é %d", num - 1, num, num + 1);

    return 0;
}

//Exercício6. Faça um programa que receba dois números e mostre qual deles é o maior.

int main()
{
    int num1;
    int num2;
    
    printf("digite o primeiro numero \n");
    scanf("%d", &num1);
    
    printf("digite o segundo numero \n");
    scanf("%d", &num2);
    
    if(num1 > num2)
    {
       printf("O %d é maior que o %d", num1, num2); 
    }
    else
    {
        printf("O %d é maior que o %d", num2, num1);
    }

    return 0;
}

//Exercício7. Faça um programa que receba um número inteiro e verifique se este número e par ou ímpar.

int main()
{
    int num;
   
    printf("digite o numero parar saber se é par ou ímpar \n");
    scanf("%d", &num);
    
    if(num % 2 == 0)
    {
       printf("O %d é par", num); 
    }
    else
    {
        printf("O %d é ímpar", num);
    }

    return 0;
}

/*Exercício8. Escreva um programa que, dados dois números inteiros, mostre na tela o maior deles, assim
*como a diferença existente entre ambos.
*/

int main()
{
    int num1;
    int num2;
   
    printf("digite o primeiro numero \n");
    scanf("%d", &num1);
    
    printf("digite o segundo numero \n");
    scanf("%d", &num2);
    
    if(num1 > num2)
    {
       printf("O %d é maior e a diferença é %d", num1, num1 - num2); 
    }
    else if(num2 > num1)
    {
       printf("O %d é maior e a diferença é %d", num2, num2 - num1);
    }
    else
    {
        printf("Os numeros são iguais");
    }

    return 0;
}

/*Exercício9. Escreva o menu de opções abaixo. Leia a opção do usuário e execute a operação escolhida.
*Escreva uma mensagem de erro se a opção for inválida.
*Escolha a opção:
*1- Soma de 2 números.
*2- Diferença entre 2 números (maior pelo menor).
*3- Produto entre 2 números.
*4- Divisão entre 2 números (o denominador não pode ser zero).
*Opção:
*/

int main()
{
    int escolha;
    int num1;
    int num2;
    
    printf("Digite o primeiro numero para a opação: ");
    scanf("%d", &num1);
    
    printf("Digite o segundo numero para a operação: ");
    scanf("%d", &num2);
    
    printf("esolha um uma operção para se fazer: \n\n");
    printf("Para soma escolha (0) \n");
    printf("Para subtração escolha (1) \n");
    printf("Para multiplicação escolha (2) \n");
    printf("Para divisão escolha (3): \n");
    scanf("%d", &escolha);
    
    switch(escolha)
    {
        case 0:
            printf ("A soma dos numero é %d", num1 + num2);
            break;
        case 1:
            printf ("A subtração dos numeros é %d", num1 - num2);
            break;
        case 2: 
            printf ("A multiplicação dos numeros é %d", num1 * num2);
            break;
        case 3:
            if(num1 > num2)
            {
            printf ("A divisão dos numeros é %d", num1 / num2);
            }
            else
            {
                printf ("Não tem como fazer essa divisão");
            }
            break;
    }

    return 0;
}

/*Exercício10. Leia a idade e o tempo de serviço de um trabalhador e escreva se ele pode ou não se
*aposentar. As condições para aposentadoria são:
*• Ter pelo menos 65 anos,
*• Ou ter trabalhado pelo menos 30 anos,
*• Ou ter pelo menos 60 anos e trabalhado pelo menos 25 anos.
*/

int main()
{
    int i;
    int t;
    
    printf("Para saber se o funcionario pode se aposantar precisamos saber da idade: ");
    scanf("%d", &i);
    
    printf("precisamos saber o tempo de serviço: ");
    scanf("%d", &t);
    
    if(i >= 65 || t >= 30 || (i >= 60 && t >=25))
    {
        printf("Poderá se aposentar!!");
    }
    else
    {
        printf("não poderá se aposentar!!");
    }

    return 0;
}

/*Exercício11. Faça um programa que determine o mostre os cinco primeiros múltiplos de 3, considerando
*números maiores que 0.
*Disciplina: Estrutura de Dados I
*Professor: Cássio Capucho Peçanha
*/

int main()
 {  
    int c;
    
    for (c = 0; c < 5; c++)
    {
        printf("3 x %d = %d \n", c , 3 * c);
    }

    return 0;
}

/*Exercício12. Escreva um programa que escreva na tela, de 1 até 100, de 1 em 1, 3 vezes. A primeira vez
*deve usar a estrutura de repetição for, a segunda while, e a terceira do while.
*/

int main()
 {  
    int f;
    int w = 0;
    int dw = 0;
    for (f = 0; f < 101; f++)
    {
        printf(" %d \n", f);
    }
    
    while(w <= 100)
    {
        printf("%d \n", w);
        w ++;
    }
    
    do{
        printf("%d \n", dw);
        dw++;
    }
    while(dw <= 100);

    return 0;
}

/*Exercício13. Faça um algoritmo utilizando o comando while que mostra uma contagem regressiva na tela,
*iniciando em 10 e terminando em 0. Mostrar uma mensagem "FIM!” após a contagem.
*/

int main()
 {  
    int w = 10;
    
    while(w >= 0)
    {
        printf("%d \n", w);
        w --;
    }
    
    printf("FIM !!");
    
    return 0;
}

/*Exercício14. Faça um programa que leia um número inteiro positivo par N e imprima todos os números
*pares de 0 até N em ordem decrescente.
*/

int main()
 {  
    int n;
    
    printf("digite um numero: ");
    scanf("%d", &n);
    
    while(n >= 0)
    {
        if(n % 2 == 0)
        {
            printf("%d ", n);
            n--;
        }
        else
        {
            n--;
        }
    }
    
    return 0;
}

/*Exercício15. Elabore um programa que faça leitura de vários números inteiros, até que se digite um
*número negativo. O programa tem que retornar o maior e o menor número lido.
*/

int main()
 {  
    int n;
    int maior = 0; 
  
    do{
        printf("digite um numero! \n");
        scanf("%d", &n);
        
        
        if(n < 0)
        {
            
            printf("O final do Vetor foi com o numero: %d ", n);
            break;
        }
        else
        {
            printf("Numero positivo, invalido para finalizar!!\n");
            
            if( n > maior)
            {
                maior = n;
            }
            
            
        }
        
    }
    while(1);

    printf("\nO maior numero digitado foi %d", maior);
    printf("\nO menor numero digitado foi %d", n);
    
    return 0;
}

/*Exercício16. Faça um programa que possua um vetor denominado A que armazene 6 números inteiros. O
*programa deve executar os seguintes passos:
*• Atribua os seguintes valores a esse vetor: 1, 0, 5, -2, -5, 7.
*• Armazene em uma variável inteira (simples) a soma entre os valores das posições A[0], A[1] e
*A[5] do vetor e mostre na tela esta soma.
*• Modifique o vetor na posição 4, atribuindo a esta posição o valor 100.
*• Mostre na tela cada valor do vetor A, um em cada linha.
*/

int main()
 {  
    int A[6] = {1, 0, 5, -2, -5, 7};
    int c;
    int soma;

    soma = A[0];
    soma = soma + A[1];
    soma =  soma + A[5];
    
    printf("A soma do numero A[0], A[1] e A[5] é : %d ", soma);
    
    do
    {
        if(c == 0)
        {
            printf("Os numeros do vetor são:\n%d \n", A[c]);
            c++;
        }
        else if(c == 1){
            printf("%d \n", A[c]);
            c++;
        }
        else if(c == 2){
            printf("%d \n", A[c]);
            c++;
        }
        else if(c == 3){
            printf("%d \n", A[c]);
            c++;
        }
        else if(c == 4){
            A[4] = 100;
            printf("%d \n", A[c]);
            c++;
        }
        else{
            printf("%d \n", A[c]);
            c++;
        }
    }
    while(c <= 5);
    
    return 0;
}

//Exercício17.Crie um programa que lê 6 valores inteiros e, em seguida, mostre na tela os valores lidos.

int main()
{
	int A[6];
	int c;

	printf("digite os 6 numeros inteiros: \n");
	for(c = 0; c < 6; c++)
	{
		scanf("%d", &A[c]);
	}

	for(c = 0; c < 6 ; c++) 
	{
        printf("%d ", A[c]);
	}
	return 0;
}

//Exercício18. Leia um vetor de 10 posições, depois contar e escrever quantos valores pares ele possui.



/*Exercício19. Faça um programa que leia dois vetores de 10 elementos. Crie um vetor que seja a
*intersecção entre os 2 vetores anteriores, ou seja, que contém apenas os números que estão
*em ambos os vetores. Não deve conter números repetidos.
*/



/*Exercício20. Escreva um programa que leia um número inteiro positivo n e em seguida imprima n linhas do
*chamado Triangulo de Pascal:
*1
*1 1
*1 2 1
*1 3 3 1
*1 4 6 4 1
*1 5 10 10 5 1
*...
*/


